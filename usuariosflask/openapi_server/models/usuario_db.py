from openapi_server import util
from openapi_server import db
from openapi_server.models.perfil_db import PerfilDB # No sobra este import 

class UsuarioDB(db.Model):
    """
      NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
    	Do not edit the class manually.
    """

    __tablename__ = 'usuario'

    user_id = db.Column(db.Integer, primary_key=True, autoincrement=True)
    nombre = db.Column(db.String(255), nullable=False)
    correo_electronico = db.Column(db.String(255))
    password = db.Column(db.String(255))
    pais = db.Column(db.String(255))
    plan_suscripcion = db.Column(db.String(255))
    perfiles = db.relationship('PerfilDB', backref='usuario', lazy=True)

    def __init__(self, nombre, correo_electronico, password, pais, plan_suscripcion):  # noqa: E501
        """Usuario - a model defined in OpenAPI

        :param id: The id of this Usuario.  # noqa: E501
        :type id: int
        :param nombre: The nombre of this Usuario.  # noqa: E501
        :type nombre: str
        :param correo_electronico: The correo_electronico of this Usuario.  # noqa: E501
        :type correo_electronico: str
        :param pais: The pais of this Usuario.  # noqa: E501
        :type pais: str
        :param plan_suscripcion: The plan_suscripcion of this Usuario.  # noqa: E501
        :type plan_suscripcion: str
        :param dispositivos: The dispositivos of this Usuario.  # noqa: E501
        :type dispositivos: List[str]
        :param perfiles: The perfiles of this Usuario.  # noqa: E501
        :type perfiles: List[Perfil]
        """
        self.openapi_types = {
            'user_id': int,
            'nombre': str,
            'correo_electronico': str,
            'password': str,
            'pais': str,
            'plan_suscripcion': str,
            # 'perfiles': List[Perfil]
        }

        self.attribute_map = {
            'user_id': 'user_id',
            'nombre': 'nombre',
            'correo_electronico': 'correo_electronico',
            'password': 'password',
            'pais': 'pais',
            'plan_suscripcion': 'plan_suscripcion',
            # 'perfiles': 'perfiles'
        }

        self.nombre = nombre
        self.correo_electronico = correo_electronico
        self.password = password
        self.pais = pais
        self.plan_suscripcion = plan_suscripcion
        # self.perfiles = perfiles
    
    def serialize(self):
        return {
            'user_id': self.user_id,
            'nombre': self.nombre,
            'correo_electronico': self.correo_electronico,
            'password': self.password,
            'pais': self.pais,
            'plan_suscripcion': self.plan_suscripcion,
            'dispositivos': self.dispositivos
        }

    @classmethod
    def from_dict(cls, dikt) -> 'UsuarioDB':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Usuario of this Usuario.  # noqa: E501
        :rtype: Usuario
        """
        return util.deserialize_model(dikt, cls)