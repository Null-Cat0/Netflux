from typing import List # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.capitulo import Capitulo
from openapi_server.models.preferencias_contenido import PreferenciasContenido
from openapi_server import util

class Perfil(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, perfil_id=None, user_id=None, nombre=None, foto_perfil=None, historial_vistos=None, mi_lista=None, preferencias_contenido=None):  # noqa: E501
        """Perfil - a model defined in OpenAPI

        :param perfil_id: The id of this Perfil.  # noqa: E501
        :type perfil_id: int
        :param user_id: The user_id of this Perfil.  # noqa: E501
        :type user_id: int
        :param nombre: The nombre of this Perfil.  # noqa: E501
        :type nombre: str
        :param foto_perfil: The foto_perfil of this Perfil.  # noqa: E501
        :type foto_perfil: str
        :param historial_vistos: The historial_vistos of this Perfil.  # noqa: E501
        :type historial_vistos: List[Capitulo]
        :param mi_lista: The mi_lista of this Perfil.  # noqa: E501
        :type mi_lista: List[Capitulo]
        :param preferencias_contenido: The preferencias_contenido of this Perfil.  # noqa: E501
        :type preferencias_contenido: PreferenciasContenido
        """
        self.openapi_types = {
            'perfil_id': int,
            'user_id': int,
            'nombre': str,
            'foto_perfil': str,
            'historial_vistos': List[Capitulo],
            'mi_lista': List[Capitulo],
            'preferencias_contenido': PreferenciasContenido
        }

        self.attribute_map = {
            'perfil_id': 'perfil_id',
            'user_id': 'user_id',
            'nombre': 'nombre',
            'foto_perfil': 'foto_perfil',
            'historial_vistos': 'historial_vistos',
            'mi_lista': 'mi_lista',
            'preferencias_contenido': 'preferencias_contenido'
        }

        self._perfil_id = perfil_id
        self._user_id = user_id
        self._nombre = nombre
        self._foto_perfil = foto_perfil
        self._historial_vistos = historial_vistos
        self._mi_lista = mi_lista
        self._preferencias_contenido = preferencias_contenido

    def serialize(self):
        return {
            'perfil_id': self.perfil_id,
            'user_id': self.user_id,
            'nombre': self.nombre,
            'foto_perfil': self.foto_perfil,
            'preferencias_contenido': self.preferencias_contenido.serialize() if self.preferencias_contenido is not None else None
        }
    
    def to_db_model(self):
        from openapi_server.models.perfil_db import PerfilDB
        return PerfilDB(
            user_id=self.user_id,
            nombre=self.nombre,
            foto_perfil=self.foto_perfil,
        )

    @classmethod
    def from_dict(cls, dikt) -> 'Perfil':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Perfil of this Perfil.  # noqa: E501
        :rtype: Perfil
        """
        return util.deserialize_model(dikt, cls)

    @property
    def perfil_id(self) -> int:
        """Gets the id of this Perfil.

        ID del perfil en específico  # noqa: E501

        :return: The id of this Perfil.
        :rtype: int
        """
        return self._perfil_id

    @perfil_id.setter
    def perfil_id(self, id: int):
        """Sets the id of this Perfil.

        ID del perfil en específico  # noqa: E501

        :param id: The id of this Perfil.
        :type id: int
        """

        self._perfil_id = id

    @property
    def user_id(self) -> int:
        """Gets the user_id of this Perfil.

        ID del usuario al que pertenece el perfil  # noqa: E501

        :return: The user_id of this Perfil.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id: int):
        """Sets the user_id of this Perfil.

        ID del usuario al que pertenece el perfil  # noqa: E501

        :param user_id: The user_id of this Perfil.
        :type user_id: int
        """

        self._user_id = user_id

    @property
    def nombre(self) -> str:
        """Gets the nombre of this Perfil.


        :return: The nombre of this Perfil.
        :rtype: str
        """
        return self._nombre

    @nombre.setter
    def nombre(self, nombre: str):
        """Sets the nombre of this Perfil.


        :param nombre: The nombre of this Perfil.
        :type nombre: str
        """
        if nombre is None:
            raise ValueError("Invalid value for `nombre`, must not be `None`")  # noqa: E501

        self._nombre = nombre

    @property
    def foto_perfil(self) -> str:
        """Gets the foto_perfil of this Perfil.


        :return: The foto_perfil of this Perfil.
        :rtype: str
        """
        return self._foto_perfil

    @foto_perfil.setter
    def foto_perfil(self, foto_perfil: str):
        """Sets the foto_perfil of this Perfil.


        :param foto_perfil: The foto_perfil of this Perfil.
        :type foto_perfil: str
        """

        self._foto_perfil = foto_perfil

    @property
    def historial_vistos(self) -> List[Capitulo]:
        """Gets the historial_vistos of this Perfil.


        :return: The historial_vistos of this Perfil.
        :rtype: List[Capitulo]
        """
        return self._historial_vistos

    @historial_vistos.setter
    def historial_vistos(self, historial_vistos: List[Capitulo]):
        """Sets the historial_vistos of this Perfil.


        :param historial_vistos: The historial_vistos of this Perfil.
        :type historial_vistos: List[Capitulo]
        """

        self._historial_vistos = historial_vistos

    @property
    def mi_lista(self) -> List[Capitulo]:
        """Gets the mi_lista of this Perfil.

        Lista con el contenido que el usuario ha guardado  # noqa: E501

        :return: The mi_lista of this Perfil.
        :rtype: List[Capitulo]
        """
        return self._mi_lista

    @mi_lista.setter
    def mi_lista(self, mi_lista: List[Capitulo]):
        """Sets the mi_lista of this Perfil.

        Lista con el contenido que el usuario ha guardado  # noqa: E501

        :param mi_lista: The mi_lista of this Perfil.
        :type mi_lista: List[Capitulo]
        """

        self._mi_lista = mi_lista

    @property
    def preferencias_contenido(self) -> PreferenciasContenido:
        """Gets the preferencias_contenido of this Perfil.


        :return: The preferencias_contenido of this Perfil.
        :rtype: PreferenciasContenido
        """
        return self._preferencias_contenido

    @preferencias_contenido.setter
    def preferencias_contenido(self, preferencias_contenido: PreferenciasContenido):
        """Sets the preferencias_contenido of this Perfil.


        :param preferencias_contenido: The preferencias_contenido of this Perfil.
        :type preferencias_contenido: PreferenciasContenido
        """

        self._preferencias_contenido = preferencias_contenido
