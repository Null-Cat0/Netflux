from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.capitulo import Capitulo
from openapi_server import util

from openapi_server.models.capitulo import Capitulo  # noqa: E501

class Temporada(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, numero=None, anio_lanzamiento=None, capitulos=None):  # noqa: E501
        """Temporada - a model defined in OpenAPI

        :param id: The id of this Temporada.  # noqa: E501
        :type id: int
        :param numero: The numero of this Temporada.  # noqa: E501
        :type numero: int
        :param anio_lanzamiento: The anio_lanzamiento of this Temporada.  # noqa: E501
        :type anio_lanzamiento: int
        :param capitulos: The capitulos of this Temporada.  # noqa: E501
        :type capitulos: List[Capitulo]
        """
        self.openapi_types = {
            'id': int,
            'numero': int,
            'anio_lanzamiento': int,
            'capitulos': List[Capitulo]
        }

        self.attribute_map = {
            'id': 'id',
            'numero': 'numero',
            'anio_lanzamiento': 'anio_lanzamiento',
            'capitulos': 'capitulos'
        }

        self._id = id
        self._numero = numero
        self._anio_lanzamiento = anio_lanzamiento
        self._capitulos = capitulos

    @classmethod
    def from_dict(cls, dikt) -> 'Temporada':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Temporada of this Temporada.  # noqa: E501
        :rtype: Temporada
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Temporada.


        :return: The id of this Temporada.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Temporada.


        :param id: The id of this Temporada.
        :type id: int
        """

        self._id = id

    @property
    def numero(self) -> int:
        """Gets the numero of this Temporada.


        :return: The numero of this Temporada.
        :rtype: int
        """
        return self._numero

    @numero.setter
    def numero(self, numero: int):
        """Sets the numero of this Temporada.


        :param numero: The numero of this Temporada.
        :type numero: int
        """
        if numero is None:
            raise ValueError("Invalid value for `numero`, must not be `None`")  # noqa: E501

        self._numero = numero

    @property
    def anio_lanzamiento(self) -> int:
        """Gets the anio_lanzamiento of this Temporada.


        :return: The anio_lanzamiento of this Temporada.
        :rtype: int
        """
        return self._anio_lanzamiento

    @anio_lanzamiento.setter
    def anio_lanzamiento(self, anio_lanzamiento: int):
        """Sets the anio_lanzamiento of this Temporada.


        :param anio_lanzamiento: The anio_lanzamiento of this Temporada.
        :type anio_lanzamiento: int
        """
        if anio_lanzamiento is None:
            raise ValueError("Invalid value for `anio_lanzamiento`, must not be `None`")  # noqa: E501

        self._anio_lanzamiento = anio_lanzamiento

    @property
    def capitulos(self) -> List[Capitulo]:
        """Gets the capitulos of this Temporada.


        :return: The capitulos of this Temporada.
        :rtype: List[Capitulo]
        """
        return self._capitulos

    @capitulos.setter
    def capitulos(self, capitulos: List[Capitulo]):
        """Sets the capitulos of this Temporada.


        :param capitulos: The capitulos of this Temporada.
        :type capitulos: List[Capitulo]
        """

        self._capitulos = capitulos
