openapi: 3.0.3
info:
  title: Netflux Grupo 3 - OpenAPI 3.0
  description: API de Netflux realizada por el grupo 3 de la asignatura ASEE. Microservicio de **Contenido**.
  license:
    name: Copyleft
    url: https://url/a/la/licencia
  version: 0.0.1
servers:
    - url: https://path/api/v1
tags:
  - name: Serie
    description: Representa una serie de televisión, que puede contener una o más temporadas. Incluye información como el título, el género, la sinopsis y el año de estreno.
  - name: Temporada
    description: Representa una temporada de una serie de televisión. Cada temporada contiene un conjunto de capítulos y tiene su propio número de temporada y año de lanzamiento.
  - name: Capitulo
    description: Representa un episodio de una temporada de una serie de televisión. Incluye información como el número del capítulo, el título, la duración y una breve sinopsis.
  - name: Pelicula
    description: Representa una película. Incluye información como el título, la duración, una breve sinopsis o el año de lanzamiento.
  - name: Actor
    description: Representa un actor que participa en una serie de televisión. Incluye información sobre el nombre del actor, la fecha de nacimiento, el personaje interpretado y una biografía opcional.

paths:
  /series:
    get:
      tags:
        - Serie
      summary: Listar todas las series
      description: Obtiene una lista de todas las series de televisión disponibles en el sistema, incluyendo información básica como el título, género y año de estreno.
      operationId: listarSeries
      responses:
        '200':
          description: Lista de series obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Serie'
        '500':
          description: Error interno del servidor
    post:
      tags:
        - Serie
      summary: Crear una nueva serie
      description: Crea una nueva serie de televisión con la información proporcionada.
      operationId: crearSerie
      requestBody:
        description: Objeto de la serie a crear
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Serie'
      responses:
        '201':
          description: Serie creada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Serie'
        '400':
          description: Solicitud inválida
        '500':
          description: Error interno del servidor
          
  /series/{serieId}:
    get:
      tags:
        - Serie
      summary: Obtener una serie específica
      description: Obtiene la información detallada de una serie específica por su ID.
      operationId: obtenerSerie
      parameters:
        - name: serieId
          in: path
          description: ID de la serie a obtener
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '200':
          description: Serie obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Serie'
        '404':
          description: Serie no encontrada
        '500':
          description: Error interno del servidor
    put:
      tags:
        - Serie
      summary: Actualizar una serie existente
      description: Actualiza la información de una serie específica por su ID.
      operationId: actualizarSerie
      parameters:
        - name: serieId
          in: path
          description: ID de la serie a actualizar
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      requestBody:
        description: Objeto de la serie con la información actualizada
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerieUpdate'
      responses:
        '200':
          description: Serie actualizada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Serie'
        '400':
          description: Solicitud inválida
        '404':
          description: Serie no encontrada
        '500':
          description: Error interno del servidor
    
    delete:
      tags:
        - Serie
      summary: Eliminar una serie
      description: Elimina una serie específica por su ID.
      operationId: eliminarSerie
      parameters:
        - name: serieId
          in: path
          description: ID de la serie a eliminar
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '204':
          description: Serie eliminada exitosamente
        '404':
          description: Serie no encontrada
        '500':
          description: Error interno del servidor
          
  /series/{serieId}/actores:
    get:
      tags:
        - Serie
      summary: Listar los actores de una serie específica
      description: Obtiene una lista de todos los actores que participan en una serie específica.
      operationId: listarActoresDeSerie
      parameters:
        - name: serieId
          in: path
          description: ID de la serie
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '200':
          description: Lista de actores obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Actor'
        '404':
          description: Serie no encontrada
        '500':
          description: Error interno del servidor
    
    patch:
      tags:
        - Serie
      summary: Asignar un actor a una serie
      description: Asigna un actor existente a una serie específica.
      operationId: asignarActorASerie
      parameters:
        - name: serieId
          in: path
          description: ID de la serie
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      requestBody:
        description: ID del actor a asignar
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                actorId:
                  type: integer
                  format: int64
                  example: 1
      responses:
        '204':
          description: Actor asignado a la serie exitosamente
        '400':
          description: Solicitud inválida
        '404':
          description: Serie o actor no encontrado
        '500':
          description: Error interno del servidor

  /series/{serieId}/actores/{actorId}:
    delete:
      tags:
        - Serie
      summary: Elimnar un actor de una serie
      description: Elimina un actor existente de una serie específica.
      operationId: eliminarActorSerie
      parameters:
        - name: serieId
          in: path
          description: ID de la serie
          required: true
          schema:
            type: integer
            format: int64
            example: 1
        - name: actorId
          in: path
          description: ID del actor
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '204':
          description: Actor eliminado de la serie correctamente
        '400':
          description: Solicitud inválida
        '404':
          description: Serie o actor no encontrado
        '500':
          description: Error interno del servidor

  /series/{serieId}/temporadas:
    get:
      tags:
        - Temporada
      summary: Listar todas las temporadas de una serie
      description: Obtiene una lista de todas las temporadas de una serie específica.
      operationId: listarTemporadas
      parameters:
        - name: serieId
          in: path
          description: ID de la serie
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '200':
          description: Lista de temporadas obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Temporada'
        '404':
          description: Serie no encontrada
        '500':
          description: Error interno del servidor
    
    post:
      tags:
        - Temporada
      summary: Crear una nueva temporada para una serie
      description: Crea una nueva temporada para una serie específica.
      operationId: crearTemporada
      parameters:
        - name: serieId
          in: path
          description: ID de la serie
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      requestBody:
        description: Objeto de la temporada a crear
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Temporada'
      responses:
        '201':
          description: Temporada creada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Temporada'
        '400':
          description: Solicitud inválida
        '404':
          description: Serie no encontrada
        '500':
          description: Error interno del servidor

  /series/{serieId}/temporadas/{temporadaId}:
    get:
      tags:
        - Temporada
      summary: Obtener una temporada específica de una serie
      description: Obtiene la información detallada de una temporada específica de una serie.
      operationId: obtenerTemporada
      parameters:
        - name: serieId
          in: path
          description: ID de la serie
          required: true
          schema:
            type: integer
            format: int64
            example: 1
        - name: temporadaId
          in: path
          description: ID de la temporada
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '200':
          description: Temporada obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Temporada'
        '404':
          description: Serie o temporada no encontrada
        '500':
          description: Error interno del servidor
    
    put:
      tags:
        - Temporada
      summary: Actualizar una temporada existente
      description: Actualiza la información de una temporada específica de una serie.
      operationId: actualizarTemporada
      parameters:
        - name: serieId
          in: path
          description: ID de la serie
          required: true
          schema:
            type: integer
            format: int64
            example: 1
        - name: temporadaId
          in: path
          description: ID de la temporada
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      requestBody:
        description: Objeto de la temporada con la información actualizada
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemporadaUpdate'
      responses:
        '200':
          description: Temporada actualizada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Temporada'
        '400':
          description: Solicitud inválida
        '404':
          description: Serie o temporada no encontrada
        '500':
          description: Error interno del servidor
    
    delete:
      tags:
        - Temporada
      summary: Eliminar una temporada
      description: Elimina una temporada específica de una serie.
      operationId: eliminarTemporada
      parameters:
        - name: serieId
          in: path
          description: ID de la serie
          required: true
          schema:
            type: integer
            format: int64
            example: 1
        - name: temporadaId
          in: path
          description: ID de la temporada
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '204':
          description: Temporada eliminada exitosamente
        '404':
          description: Serie o temporada no encontrada
        '500':
          description: Error interno del servidor

  /series/{serieId}/temporadas/{temporadaId}/capitulos:
    get:
      tags:
        - Capitulo
      summary: Listar todos los capítulos de una temporada
      description: Obtiene una lista de todos los capítulos de una temporada específica de una serie.
      operationId: listarCapitulos
      parameters:
        - name: serieId
          in: path
          description: ID de la serie
          required: true
          schema:
            type: integer
            format: int64
            example: 1
        - name: temporadaId
          in: path
          description: ID de la temporada
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '200':
          description: Lista de capítulos obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Capitulo'
        '404':
          description: Serie o temporada no encontrada
        '500':
          description: Error interno del servidor
    post:
      tags:
        - Capitulo
      summary: Crear un nuevo capítulo para una temporada
      description: Crea un nuevo capítulo para una temporada específica de una serie.
      operationId: crearCapitulo
      parameters:
        - name: serieId
          in: path
          description: ID de la serie
          required: true
          schema:
            type: integer
            format: int64
            example: 1
        - name: temporadaId
          in: path
          description: ID de la temporada
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      requestBody:
        description: Objeto del capítulo a crear
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Capitulo'
      responses:
        '201':
          description: Capítulo creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Capitulo'
        '400':
          description: Solicitud inválida
        '404':
          description: Serie o temporada no encontrada
        '500':
          description: Error interno del servidor

  /series/{serieId}/temporadas/{temporadaId}/capitulos/{capituloId}:
    get:
      tags:
        - Capitulo
      summary: Obtener un capítulo específico de una temporada
      description: Obtiene la información detallada de un capítulo específico de una temporada de una serie.
      operationId: obtenerCapitulo
      parameters:
        - name: serieId
          in: path
          description: ID de la serie
          required: true
          schema:
            type: integer
            format: int64
            example: 1
        - name: temporadaId
          in: path
          description: ID de la temporada
          required: true
          schema:
            type: integer
            format: int64
            example: 1
        - name: capituloId
          in: path
          description: ID del capítulo
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '200':
          description: Capítulo obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Capitulo'
        '404':
          description: Serie, temporada o capítulo no encontrado
        '500':
          description: Error interno del servidor
    put:
      tags:
        - Capitulo
      summary: Actualizar un capítulo existente
      description: Actualiza la información de un capítulo específico de una temporada de una serie.
      operationId: actualizarCapitulo
      parameters:
        - name: serieId
          in: path
          description: ID de la serie
          required: true
          schema:
            type: integer
            format: int64
            example: 1
        - name: temporadaId
          in: path
          description: ID de la temporada
          required: true
          schema:
            type: integer
            format: int64
            example: 1
        - name: capituloId
          in: path
          description: ID del capítulo
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      requestBody:
        description: Objeto del capítulo con la información actualizada
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapituloUpdate'
      responses:
        '200':
          description: Capítulo actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Capitulo'
        '400':
          description: Solicitud inválida
        '404':
          description: Serie, temporada o capítulo no encontrado
        '500':
          description: Error interno del servidor
    delete:
      tags:
        - Capitulo
      summary: Eliminar un capítulo
      description: Elimina un capítulo específico de una temporada de una serie.
      operationId: eliminarCapitulo
      parameters:
        - name: serieId
          in: path
          description: ID de la serie
          required: true
          schema:
            type: integer
            format: int64
            example: 1
        - name: temporadaId
          in: path
          description: ID de la temporada
          required: true
          schema:
            type: integer
            format: int64
            example: 1
        - name: capituloId
          in: path
          description: ID del capítulo
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '204':
          description: Capítulo eliminado exitosamente
        '404':
          description: Serie, temporada o capítulo no encontrado
        '500':
          description: Error interno del servidor

  /pelicula:
    get:
      tags:
        - Pelicula
      summary: Listar todas las películas
      description: Obtiene una lista de todas las películas disponibles en el sistema, incluyendo información básica como el título, género y año de estreno.
      operationId: listarPeliculas
      responses:
        '200':
          description: Lista de películas obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pelicula'
    post:
      tags:
        - Pelicula
      summary: Crear una nueva película
      description: Crea una nueva película con la información proporcionada.
      operationId: crearPelicula
      requestBody:
        description: Objeto de la película a crear
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pelicula'
      responses:
        '201':
          description: película creada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pelicula'
        '400':
          description: Solicitud inválida
        '500':
          description: Error interno del servidor
          
  /pelicula/{peliculaId}:
    get:
      tags:
        - Pelicula
      summary: Obtener una película específica
      description: Obtiene la información detallada de una película específica por su ID.
      operationId: obtenerPelicula
      parameters:
        - name: peliculaId
          in: path
          description: ID de la película a obtener
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '200':
          description: película obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pelicula'
        '404':
          description: película no encontrada
        '500':
          description: Error interno del servidor
    put:
      tags:
        - Pelicula
      summary: Actualizar una película existente
      description: Actualiza la información de una película específica por su ID.
      operationId: actualizarPelicula
      parameters:
        - name: peliculaId
          in: path
          description: ID de la película a actualizar
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      requestBody:
        description: Objeto de la película con la información actualizada
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PeliculaUpdate'
      responses:
        '200':
          description: película actualizada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pelicula'
        '400':
          description: Solicitud inválida
        '404':
          description: película no encontrada
        '500':
          description: Error interno del servidor
    delete:
      tags:
        - Pelicula
      summary: Eliminar una película
      description: Elimina una película específica por su ID.
      operationId: eliminarPelicula
      parameters:
        - name: peliculaId
          in: path
          description: ID de la película a eliminar
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '204':
          description: película eliminada exitosamente
        '404':
          description: película no encontrada
        '500':
          description: Error interno del servidor
          
  /pelicula/{peliculaId}/secuela:
    get:
      tags:
        - Pelicula
      summary: Obtiene la secuela de una película específica
      description: Obtiene la secuela de una película específica
      operationId: obtenerSecuelaPelicula
      parameters:
        - name: peliculaId
          in: path
          description: ID de la película
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '200':
          description: secuela obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pelicula'
        '404':
          description: secuela no encontrada
        '500':
          description: Error interno del servidor
          
  /pelicula/{peliculaId}/precuela:
    get:
      tags:
        - Pelicula
      summary: Obtiene la precuela de una película específica
      description: Obtiene la precuela de una película específica
      operationId: obtenerPrecuelaPelicula
      parameters:
        - name: peliculaId
          in: path
          description: ID de la película
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '200':
          description: precuela obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pelicula'
        '404':
          description: precuela no encontrada
        '500':
          description: Error interno del servidor
          
  /pelicula/{peliculaId}/actores:
    get:
      tags:
        - Pelicula
      summary: Listar actores de una película específica
      description: Obtiene una lista de todos los actores que participan en una película específica.
      operationId: listarActoresDePelicula
      parameters:
        - name: peliculaId
          in: path
          description: ID de la película
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '200':
          description: Lista de actores obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Actor'
        '404':
          description: película no encontrada
        '500':
          description: Error interno del servidor
    
    patch:
      tags:
        - Pelicula
      summary: Asignar un actor a una película
      description: Asigna un actor existente a una película específica.
      operationId: asignarActorAPelicula
      parameters:
        - name: peliculaId
          in: path
          description: ID de la película
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      requestBody:
        description: ID del actor a asignar
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                actorId:
                  type: integer
                  format: int64
                  example: 1
      responses:
        '204':
          description: Actor asignado a la película exitosamente
        '400':
          description: Solicitud inválida
        '404':
          description: película o actor no encontrado
        '500':
          description: Error interno del servidor
          
  /pelicula/{peliculaId}/actores/{actorId}:
    delete:
      tags:
        - Pelicula
      summary: Elimnar un actor de una película
      description: Elimina un actor existente de una película específica.
      operationId: eliminarActorPelicula
      parameters:
        - name: peliculaId
          in: path
          description: ID de la película
          required: true
          schema:
            type: integer
            format: int64
            example: 1
        - name: actorId
          in: path
          description: ID del actor
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '204':
          description: Actor eliminado de la película correctamente
        '400':
          description: Solicitud inválida
        '404':
          description: Película o actor no encontrado
        '500':
          description: Error interno del servidor
    
  /actores:
    get:
      tags:
        - Actor
      summary: Listar todos los actores
      description: Obtiene una lista de todos los actores registrados en el sistema.
      operationId: listarActores
      responses:
        '200':
          description: Lista de actores obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Actor'
    post:
      tags:
        - Actor
      summary: Crear un nuevo actor
      description: Crea un nuevo actor con la información proporcionada.
      operationId: crearActor
      requestBody:
        description: Objeto del actor a crear
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
      responses:
        '201':
          description: Actor creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
        '400':
          description: Solicitud inválida
        '500':
          description: Error interno del servidor

  /actores/{actorId}:
    get:
      tags:
        - Actor
      summary: Obtener un actor específico
      description: Obtiene la información detallada de un actor específico por su ID.
      operationId: obtenerActor
      parameters:
        - name: actorId
          in: path
          description: ID del actor a obtener
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '200':
          description: Actor obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
        '404':
          description: Actor no encontrado
        '500':
          description: Error interno del servidor
    put:
      tags:
        - Actor
      summary: Actualizar un actor existente
      description: Actualiza la información de un actor específico por su ID.
      operationId: actualizarActor
      parameters:
        - name: actorId
          in: path
          description: ID del actor a actualizar
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      requestBody:
        description: Objeto del actor con la información actualizada
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorUpdate'
      responses:
        '200':
          description: Actor actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
        '400':
          description: Solicitud inválida
        '404':
          description: Actor no encontrado
        '500':
          description: Error interno del servidor
    delete:
      tags:
        - Actor
      summary: Eliminar un actor
      description: Elimina un actor específico por su ID.
      operationId: eliminarActor
      parameters:
        - name: actorId
          in: path
          description: ID del actor a eliminar
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '204':
          description: Actor eliminado exitosamente
        '404':
          description: Actor no encontrado
        '500':
          description: Error interno del servidor
          
  /actores/{actorId}/series:
    get:
      tags:
        - Actor
      summary: Listar series en las que ha participado un actor en específico.
      description: Obtiene una lista de todas las series en las que ha participado un actor.
      operationId: listarSeriesDeActor
      parameters:
        - name: actorId
          in: path
          description: ID del actor
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '200':
          description: Lista de series obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Serie'
        '404':
          description: Actor no encontrado
        '500':
          description: Error interno del servidor
          
  /actores/{actorId}/peliculas:
    get:
      tags:
        - Actor
      summary: Listar películas en las que ha participado un actor en específico.
      description: Obtiene una lista de todas las películas en las que ha participado un actor.
      operationId: listarPeliculasDeActor
      parameters:
        - name: actorId
          in: path
          description: ID del actor
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '200':
          description: Lista de películas obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pelicula'
        '404':
          description: Actor no encontrado
        '500':
          description: Error interno del servidor

components:
  schemas:
    Serie:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        titulo:
          type: string
          example: "Breaking Bad"
        genero:
          type: string
          example: "Drama"
        sinopsis:
          type: string
          example: "Un profesor de química se convierte en fabricante de metanfetamina."
        anioEstreno:
          type: integer
          format: int32
          example: 2008
        temporadas:
          type: array
          items:
            $ref: '#/components/schemas/Temporada'
        actores:
          type: array
          items:
            $ref: '#/components/schemas/Actor'
      required:
        - titulo
        - genero
        - sinopsis
        - anioEstreno
        
    SerieUpdate:
      allOf:
        - $ref: '#/components/schemas/Serie'
        - required:
          - id

    Temporada:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        numero:
          type: integer
          format: int32
          description: Número de la temporada
          example: 1
        anioLanzamiento:
          type: integer
          format: int32
          example: 2008
        capitulos:
          type: array
          items:
            $ref: '#/components/schemas/Capitulo'
      required:
        - numero
        - anioLanzamiento
        
    TemporadaUpdate:
      allOf:
        - $ref: '#/components/schemas/Temporada'
        - required:
          - id

    Capitulo:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        numero:
          type: integer
          format: int32
          example: 1
        titulo:
          type: string
          example: "Piloto"
        duracion:
          type: integer
          format: int32
          description: Duración del capítulo en minutos
          example: 58
        sinopsis:
          type: string
          example: "Walter White toma una decisión radical tras ser diagnosticado con cáncer de pulmón."
      required:
        - numero
        - titulo
        - duracion
        
    CapituloUpdate:
      allOf:
        - $ref: '#/components/schemas/Capitulo'
        - required:
          - id
        
    Pelicula:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        titulo:
          type: string
          example: "Breaking Bad"
        genero:
          type: string
          example: "Drama"
        sinopsis:
          type: string
          example: "Un profesor de química se convierte en fabricante de metanfetamina."
        anioEstreno:
          type: integer
          format: int32
          example: 2008
        duracion:
          type: integer
          format: int32
          example: 112
        temporadas:
          type: array
          items:
            $ref: '#/components/schemas/Temporada'
        actores:
          type: array
          items:
            $ref: '#/components/schemas/Actor'
      required:
        - titulo
        - genero
        - sinopsis
        - anioEstreno
        
    PeliculaUpdate:
      allOf:
        - $ref: '#/components/schemas/Pelicula'
        - required:
          - id

    Actor:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        nombre:
          type: string
          example: "Bryan Cranston"
        fechaNacimiento:
          type: string
          format: date
          example: "1956-03-07"
        biografia:
          type: string
          example: "Actor estadounidense conocido por su papel en 'Breaking Bad'."
      required:
        - nombre
        - fechaNacimiento
        - biografia
        
    ActorUpdate:
      allOf:
        - $ref: '#/components/schemas/Actor'
        - required:
          - id
