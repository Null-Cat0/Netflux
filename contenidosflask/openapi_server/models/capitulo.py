from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class Capitulo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, numero=None, titulo=None, duracion=None, sinopsis=None):  # noqa: E501
        """Capitulo - a model defined in OpenAPI

        :param id: The id of this Capitulo.  # noqa: E501
        :type id: int
        :param numero: The numero of this Capitulo.  # noqa: E501
        :type numero: int
        :param titulo: The titulo of this Capitulo.  # noqa: E501
        :type titulo: str
        :param duracion: The duracion of this Capitulo.  # noqa: E501
        :type duracion: int
        :param sinopsis: The sinopsis of this Capitulo.  # noqa: E501
        :type sinopsis: str
        """
        self.openapi_types = {
            'id': int,
            'numero': int,
            'titulo': str,
            'duracion': int,
            'sinopsis': str
        }

        self.attribute_map = {
            'id': 'id',
            'numero': 'numero',
            'titulo': 'titulo',
            'duracion': 'duracion',
            'sinopsis': 'sinopsis'
        }

        self._id = id
        self._numero = numero
        self._titulo = titulo
        self._duracion = duracion
        self._sinopsis = sinopsis

    @classmethod
    def from_dict(cls, dikt) -> 'Capitulo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Capitulo of this Capitulo.  # noqa: E501
        :rtype: Capitulo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Capitulo.


        :return: The id of this Capitulo.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Capitulo.


        :param id: The id of this Capitulo.
        :type id: int
        """

        self._id = id

    @property
    def numero(self) -> int:
        """Gets the numero of this Capitulo.


        :return: The numero of this Capitulo.
        :rtype: int
        """
        return self._numero

    @numero.setter
    def numero(self, numero: int):
        """Sets the numero of this Capitulo.


        :param numero: The numero of this Capitulo.
        :type numero: int
        """
        if numero is None:
            raise ValueError("Invalid value for `numero`, must not be `None`")  # noqa: E501

        self._numero = numero

    @property
    def titulo(self) -> str:
        """Gets the titulo of this Capitulo.


        :return: The titulo of this Capitulo.
        :rtype: str
        """
        return self._titulo

    @titulo.setter
    def titulo(self, titulo: str):
        """Sets the titulo of this Capitulo.


        :param titulo: The titulo of this Capitulo.
        :type titulo: str
        """
        if titulo is None:
            raise ValueError("Invalid value for `titulo`, must not be `None`")  # noqa: E501

        self._titulo = titulo

    @property
    def duracion(self) -> int:
        """Gets the duracion of this Capitulo.

        Duración del capítulo en minutos  # noqa: E501

        :return: The duracion of this Capitulo.
        :rtype: int
        """
        return self._duracion

    @duracion.setter
    def duracion(self, duracion: int):
        """Sets the duracion of this Capitulo.

        Duración del capítulo en minutos  # noqa: E501

        :param duracion: The duracion of this Capitulo.
        :type duracion: int
        """
        if duracion is None:
            raise ValueError("Invalid value for `duracion`, must not be `None`")  # noqa: E501

        self._duracion = duracion

    @property
    def sinopsis(self) -> str:
        """Gets the sinopsis of this Capitulo.


        :return: The sinopsis of this Capitulo.
        :rtype: str
        """
        return self._sinopsis

    @sinopsis.setter
    def sinopsis(self, sinopsis: str):
        """Sets the sinopsis of this Capitulo.


        :param sinopsis: The sinopsis of this Capitulo.
        :type sinopsis: str
        """

        self._sinopsis = sinopsis
